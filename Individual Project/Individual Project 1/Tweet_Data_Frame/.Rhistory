library("twitteR")
library(tm)
library(dplyr)
library("plotly")
library(ggplot2)
library(RColorBrewer)
library(tidytext)
library(stringr)
library(tidyr)
library(rtweet)
library(corpus)
library(magrittr)
library(wordcloud)
library(wordcloud2)
CONSUMER_SECRET <- "gbuzairwHJDlzG6zmK3fFxqcEo2GIHbRy89NISU80IaqvVhjIx"
CONSUMER_KEY <- "s2yMTMlykz9iJ2I86kHzWsqtF"
ACCESS_SECRET <- "znEI53FQ3P1xhF3BAfvwiptXKtTMSAmD9BTzozQD8ax98"
ACCESS_TOKEN <- "1598161218618867713-qojQanThDqRQOlGJ4YcCXhFkYDx1gr"
setup_twitter_oauth(consumer_key = CONSUMER_KEY,
consumer_secret = CONSUMER_SECRET,
access_token = ACCESS_TOKEN,
access_secret = ACCESS_SECRET)
TrendTweets <- searchTwitter("#wednesdaynetflix -filter:retweets",
n = 10000,
lang = "en",
since = "2022-11-23",
until = "2022-11-30",
retryOnRateLimit=120)
library("twitteR")
library(tm)
library(dplyr)
library("plotly")
library(ggplot2)
library(RColorBrewer)
library(tidytext)
library(stringr)
library(tidyr)
library(rtweet)
library(corpus)
library(magrittr)
library(wordcloud)
library(wordcloud2)
CONSUMER_SECRET <- "gbuzairwHJDlzG6zmK3fFxqcEo2GIHbRy89NISU80IaqvVhjIx"
CONSUMER_KEY <- "s2yMTMlykz9iJ2I86kHzWsqtF"
ACCESS_SECRET <- "znEI53FQ3P1xhF3BAfvwiptXKtTMSAmD9BTzozQD8ax98"
ACCESS_TOKEN <- "1598161218618867713-qojQanThDqRQOlGJ4YcCXhFkYDx1gr"
setup_twitter_oauth(consumer_key = CONSUMER_KEY,
consumer_secret = CONSUMER_SECRET,
access_token = ACCESS_TOKEN,
access_secret = ACCESS_SECRET)
knitr::opts_chunk$set(echo = TRUE)
library("twitteR")
library(tm)
library(dplyr)
library("plotly")
library(ggplot2)
library(RColorBrewer)
library(tidytext)
library(stringr)
library(tidyr)
library(rtweet)
library(corpus)
library(magrittr)
library(wordcloud)
library(wordcloud2)
library(syuzhet)
CONSUMER_SECRET <- "gbuzairwHJDlzG6zmK3fFxqcEo2GIHbRy89NISU80IaqvVhjIx"
CONSUMER_KEY <- "s2yMTMlykz9iJ2I86kHzWsqtF"
ACCESS_SECRET <- "znEI53FQ3P1xhF3BAfvwiptXKtTMSAmD9BTzozQD8ax98"
ACCESS_TOKEN <- "1598161218618867713-qojQanThDqRQOlGJ4YcCXhFkYDx1gr"
setup_twitter_oauth(consumer_key = CONSUMER_KEY,
consumer_secret = CONSUMER_SECRET,
access_token = ACCESS_TOKEN,
access_secret = ACCESS_SECRET)
TrendingTweetsDF <- twListToDF(TrendTweets)
TrendTweets <- searchTwitter("#wednesdaynetflix -filter:retweets",
n = 10000,
lang = "en",
since = "2022-11-23",
until = "2022-11-30",
retryOnRateLimit=120)
#Existed data file(set the location folder)
setwd("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1")
#use the data file
```{r, Trending}
load(file = "TrendingTweetDF.Rdata")
```{r sapply}
load(file = "TrendingTweetDF.Rdata")
sapply(TrendingTweetsDF, function(x) sum(is.na(x)))
tweetsDF <- TrendingTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
tweetsDF %>% group_by(1) %>%
summarise(max = max(created), min = min(created))
tweetsDF %<>%
mutate(Created_At_Round = created%>%
round(units = 'hours') %>%
as.POSIXct())
tweetsDF %>% pull(created) %>% min()
tweetsDF %>% pull(created) %>% max()
encodeSource <- function(x) {
if(grepl(">Twitter for iPhone</a>", x)){
"iphone"
}else if(grepl(">Twitter for iPad</a>", x)){
"ipad"
}else if(grepl(">Twitter for Android</a>", x)){
"android"
} else if(grepl(">Twitter Web Client</a>", x)){
"Web"
} else if(grepl(">Twitter for Windows Phone</a>", x)){
"windows phone"
}else if(grepl(">dlvr.it</a>", x)){
"dlvr.it"
}else if(grepl(">IFTTT</a>", x)){
"ifttt"
}else if(grepl(">Facebook</a>", x)){
"facebook"
}else {
"others"
}
}
tweetsDF$tweetSource = sapply(tweetsDF$statusSource,
encodeSource)
tweet_appSource <- tweetsDF %>%
select(tweetSource) %>%
group_by(tweetSource) %>%
summarize(count=n()) %>%
arrange(desc(count))
Source_subset <- subset(tweet_appSource,count >10)
dataDF <- data.frame(
category = tweet_appSource$tweetSource,
count = tweet_appSource$count
)
dataDF$fraction = dataDF$count / sum(dataDF$count)
dataDF$percentage = dataDF$count / sum(dataDF$count) * 100
dataDF$ymax = cumsum(dataDF$fraction)
dataDF$ymin = c(0, head(dataDF$ymax, n=-1))
dataDF$roundP = round(dataDF$percentage, digits = 2)
ggplot(tweetsDF[tweetsDF$tweetSource != 'others',], aes(tweetSource, fill = tweetSource)) +
geom_bar() +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Number of tweets") +
ggtitle("Tweets by Source")
namesCorpus <- Corpus(VectorSource(tweetsDF$screenName))
wordcloud2(data=namesCorpus,
size=2,
color='random-light',
shape = 'diamond')
namesCorpus <- Corpus(VectorSource(tweetsDF$screenName))
wordcloud2(data=namesCorpus,
size=2,
color='random-light',
shape = 'diamond')
wordcloud2(namesCorpus,
size=2,
color='random-light',
shape = 'diamond')
wordcloud(namesCorpus,
size=2,
color='random-light',
shape = 'diamond')
wordcloud2(namesCorpus,
size=2,
color='random-light',
shape = 'diamond')
wordcloud2(tweetsDF$screenName,
size=2,
color='random-light',
shape = 'diamond')
TweetScreen <-(tweetsDF$screenName)
wordcloud2(tweetScreen,
size=2,
color='random-light',
shape = 'diamond')
TweetScreen <-(tweetsDF$screenName)
wordcloud2(tweetScreen,
size=2,
color='random-light',
shape = 'diamond')
wordcloud2(TweetScreen,
size=2,
color='random-light',
shape = 'diamond')
TweetScreen <-(tweetsDF$screenName)
wordcloud2(TweetScreen,
size=2,
color='random-light',
shape = 'diamond')
View(tweet_appSource)
tweet_appScreen <- tweetsDF %>%
select(screenName) %>%
group_by(screenName) %>%
summarize(count=n()) %>%
arrange(desc(count))
wordcloud2(TweetScreen,
size=2,
color='random-light',
shape = 'diamond')
wordcloud2(TweetCloud,
size=2,
color='random-light',
shape = 'diamond')
TweetCloud <- tweetsDF %>%
select(screenName) %>%
group_by(screenName) %>%
summarize(count=n()) %>%
arrange(desc(count))
wordcloud2(TweetCloud,
size=2,
color='random-light',
shape = 'diamond')
load(file = "TrendTweetsDF.Rdata")
#for existed data
setwd("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1")
load(file = "TrendTweetsDF.Rdata")
#for existed data
setwd("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1")
#use the data file
load(file = "TrendTweetsDF.Rdata")
#for existed data
setwd("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1")
#use the data file
load(file = "TrendTweetsDF.Rdata")
#for existed data
setwd("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1/Tweet_Data_Frame")
#use the data file
load(file = "TrendTweetsDF.Rdata")
class(TrendTweetsDF)
names(TrendTweetsDF)
View(TrendTweetsDF)
head(TrendTweetsDF)[1:5]
head(TrendTweetsDF$text)[1:5]
head(TrendTweetsDF$text)[1:5]
head(TrendTweetsDF)[1:5]
TrendTweetsDF$text <- sapply(TrendTweetsDF$text,function(x) iconv(x,to='UTF-8'))
TrendTweetsDF$text
sapply(TrendTweetsDF, function(x) sum(is.na(x)))
load("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1/Tweet_Data_Frame/TrendTweetDF.Rdata")
View(TrendTweetsDF)
View(TrendTweetsDF)
load("C:/CS101_DATA_SCIENCE/Nalaza_Repo/Individual Project/Individual Project 1/Tweet_Data_Frame/TrendTweetsDF.Rdata")
tweetsDF
tweetsDF <- TrendTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>%
select(screenName,text,created,statusSource)
sapply(TrendTweetsDF, function(x) sum(is.na(x)))
tweetsDF <- TrendTweetsDF %>%
select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF%>%
select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>%
select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>%select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>%
select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF % > %
select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF <- TrendTweetsDF %<% select(screenName,text,created,statusSource)
tweetsDF %>% pull(created) %>% min()
sapply(TrendTweetsDF, function(x) sum(is.na(x)))
tweetsDF <- TrendTweetsDF %<% select(screenName,text,created,statusSource)
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
#Packages applied
library("twitteR")
library(tm)
library(dplyr)
library("plotly")
library(ggplot2)
library(RColorBrewer)
library(tidytext)
library(stringr)
library(tidyr)
library(rtweet)
library(corpus)
library(magrittr)
library(wordcloud)
library(wordcloud2)
library(syuzhet)
tweetsDF <- TrendTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF
tweetsDF <- TrendTweetsDF %>% select(screenName,text,created,statusSource)
tweetsDF
tweetsDF %>%
#Plot the time series from the date created. with legends.--------------------------
#Plot the trend retweets with number of tweets and date.
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
tweetsDF %>%
group_by(1) %>%
summarise(max = max(created), min = min(created))
tweetsDF %>%
group_by(1) %>%
summarise(max = max(created), min = min(created))
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
tweetsDF %<>%
mutate(Created_At_Round = created%>%
round(units = 'hours') %>%
as.POSIXct())
tweetsDF %>% pull(created) %>% min()
tweetsDF %>% pull(created) %>% max()
#plot of created trend tweets
plt <- tweetsDF %>%
dplyr::count(Created_At_Round) %>%
ggplot(mapping = aes(x = Created_At_Round, y = n)) +
theme_light() +
geom_line() +
xlab(label = 'Date') +
ylab(label = NULL) +
ggtitle(label = "Number of Tweets per Hour")
plt %>% ggplotly()
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
#Frequency of tweets
Frequency <- ts_plot(tweetsDF, "hours") +
labs(x = NULL, y = NULL,
title = "Frequency of tweets with a #wendesdaynetflix hashtag",
subtitle = paste0(format(min(tweetsDF$created), "%d %B %Y"), " to ",
format(max(tweetsDF$created),"%d %B %Y")),
caption = "Data collected from Twitter's REST API via twitteR") +
theme_minimal()
ggplotly(Frequency)
ggplot(data = tweetsDF, aes(x = created), fill = tweetsDF) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position="right",
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "black", high = "midnightblue") +
ggtitle("Trendtweets #wednesdaynetflix")
